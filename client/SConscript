# -*- mode: Python; -*-

## @file client/SConscript
#  @brief scons build for client part (JavaScript, AngularJS)

import os


Import('env')

Import('MYAPP_VER_MAJOR')
Import('MYAPP_VER_MINOR')
Import('MYAPP_VER_COMPILATION')
Import('WEB_SRV_PREFIX WEB_SRV_HOST WEB_SRV_PORT WEB_CLIENT_HOST WEB_CLIENT_PORT')


def build_lighttpd_conf(target, source, env):
    configText = """
var.log_root    = server_root
var.state_dir   = server_root
var.home_dir    = server_root
var.conf_dir    = server_root
server.pid-file = state_dir + "/lighttpd.pid"
server.errorlog = log_root + "/lighttpd.log"
server.document-root = server_root

index-file.names = ( "index.html" )

mimetype.assign = (
  ".html" => "text/html",
  ".txt" => "text/plain",
  ".jpg" => "image/jpeg",
  ".png" => "image/png",
  ".css" => "text/css",
  ".svg" => "image/svg+xml",
  ".js" => "text/javascript"
)


static-file.exclude-extensions = (".py")
server.modules += ( "mod_fastcgi" )
server.modules += ( "mod_accesslog" )

#### accesslog format (enable for using a proxy, like Pound, in front of Lighttpd)
#accesslog.format       = "%h %t %r %>s %b time: %T [s]"
accesslog.filename       = log_root + "/access.log"
"""
    file=open(str(target[0]),'w')
    server_root_path = os.path.abspath('client')
    file.write('var.server_root = "' + str(server_root_path) + '"\n')
    file.write('server.port = ' + WEB_CLIENT_PORT + '\n')

    file.write(configText)
    file.write('fastcgi.server = (\n')
    file.write('"/' + WEB_SRV_PREFIX + '" =>\n')
    file.write('((\n')
    file.write('"host" => "' + WEB_SRV_HOST + '",\n')
    file.write('"port" => ' + WEB_SRV_PORT + ',\n')
    file.write('"check-local" => "disable",\n')
    file.write('"max-procs" => 1,\n')
    file.write('))\n')
    file.write(')\n')
    file.close()
    return


#build lighttpd config
lighttd_conf = 'lighttpd.develop'
env.Command(lighttd_conf, [], build_lighttpd_conf )
env.SideEffect('lighttpd.log', lighttd_conf)
env.SideEffect('lighttpd.pid', lighttd_conf)
env.SideEffect('access.log', lighttd_conf)
